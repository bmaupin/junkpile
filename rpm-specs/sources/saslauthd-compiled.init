#! /bin/bash
#
# This is a customized saslauthd init script for starting the version of
# the Cyrus-SASL authentication daemon that we compiled using compiled
# Heimdal libraries specifically for our OpenLDAP.  Renamed saslauthd-compiled
# to prevent conflicts from RHEL-installed Cyrus-SASL.
#
# saslauthd-compiled      Start/Stop the SASL authentication daemon.
#
# chkconfig: 2345 26 74
# description: saslauthd is a server process which handles plaintext \
#              authentication requests on behalf of the cyrus-sasl library.
# processname: saslauthd

# Add the compiled Heimdal Kerberos library directory to the library path
if [ -d /usr/local/lib ] ; then
	export LD_LIBRARY_PATH="/usr/local/lib"
fi

# Source function library.
. /etc/init.d/functions

# Source our configuration file for these variables.
SOCKETDIR=/var/run/saslauthd-compiled
#MECH=shadow
MECH=kerberos5
FLAGS="-n 0"
#if [ -f /etc/sysconfig/saslauthd ] ; then
#	. /etc/sysconfig/saslauthd
#fi

RETVAL=0

# Set up some common variables before we launch into what might be
# considered boilerplate by now.
prog=saslauthd-compiled
#path=/usr/sbin/saslauthd
path=/usr/local/sbin/saslauthd

# Ugh. Switch to a specific copy of saslauthd if there's one with $MECH
# in its name, in case it wasn't included in the base cyrus-sasl package
# because it would have dragged in too many undesirable dependencies.
#if test -x ${path}.${MECH} ; then
#	path=/usr/sbin/saslauthd.$MECH
#fi

start() {
	echo -n $"Starting $prog: "
	daemon $path -m $SOCKETDIR -a $MECH $FLAGS
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog
	return $RETVAL
}

stop() {
	echo -n $"Stopping $prog: "
	killproc $path
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$prog
	return $RETVAL
}	

restart() {
  	stop
	start
}	

case "$1" in
  start)
  	start
	;;
  stop)
  	stop
	;;
  restart)
  	restart
	;;
  status)
	status $path
	;;
  condrestart)
  	[ -f /var/lock/subsys/$prog ] && restart || :
	;;
  *)
	echo $"Usage: $0 {start|stop|status|reload|restart|condrestart}"
	exit 1
esac

exit $?
